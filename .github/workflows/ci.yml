name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

# Cancel in-progress runs for the same workflow
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Job 1: Test Next.js Application
  test-nextjs:
    name: Test Next.js App
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./web3-quest-hub-app
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: web3-quest-hub-app/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run TypeScript type checking
      run: npm run type-check
    
    - name: Run ESLint
      run: npm run lint
    
    - name: Build Next.js application
      run: npm run build
      env:
        # Use example env vars for build
        NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY || 'test-key' }}
        NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN || 'test.firebaseapp.com' }}
        NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID || 'test-project' }}
        NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET || 'test.appspot.com' }}
        NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID || '123456789' }}
        NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID || '1:123456789:web:abc123' }}
    
    # - name: Run tests
    #   run: npm test
    #   if: success()
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: success() && matrix.node-version == '20.x'
      with:
        name: nextjs-build
        path: web3-quest-hub-app/.next
        retention-days: 7

  # Job 2: Test Firebase Functions
  test-firebase-functions:
    name: Test Firebase Functions
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./firebase-functions
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: firebase-functions/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run TypeScript compilation
      run: npm run build
    
    # - name: Run function tests
    #   run: npm test
    #   if: success()
    
    - name: Check for build errors
      run: |
        if [ ! -d "lib" ]; then
          echo "Build failed: lib directory not created"
          exit 1
        fi
        echo "✅ Firebase Functions compiled successfully"

  # Job 3: Lint Browser Extension
  lint-extension:
    name: Lint Browser Extension
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Validate manifest.json
      run: |
        cd web3-hud-plugin
        if ! jq empty manifest.json 2>/dev/null; then
          echo "❌ manifest.json is not valid JSON"
          exit 1
        fi
        echo "✅ manifest.json is valid"
    
    - name: Check JavaScript syntax
      run: |
        cd web3-hud-plugin
        node -c background.js
        node -c content_script.js
        node -c popup.js
        echo "✅ JavaScript syntax valid"
    
    - name: Verify required files exist
      run: |
        cd web3-hud-plugin
        files=("manifest.json" "background.js" "content_script.js" "popup.html" "popup.js" "styles/hud.css")
        for file in "${files[@]}"; do
          if [ ! -f "$file" ]; then
            echo "❌ Missing required file: $file"
            exit 1
          fi
        done
        echo "✅ All required extension files present"

  # Job 4: Security Audit
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    
    - name: Audit Next.js dependencies
      run: |
        cd web3-quest-hub-app
        npm audit --audit-level=high || true
        echo "Next.js audit completed"
    
    - name: Audit Firebase Functions dependencies
      run: |
        cd firebase-functions
        npm audit --audit-level=high || true
        echo "Functions audit completed"
    
    - name: Check for secrets in code
      run: |
        # Simple check for common secret patterns
        if grep -r "AKIA[0-9A-Z]{16}" . --exclude-dir={node_modules,.git,.next}; then
          echo "⚠️ Possible AWS keys found"
        fi
        if grep -r "sk_live_" . --exclude-dir={node_modules,.git,.next}; then
          echo "⚠️ Possible Stripe keys found"
        fi
        echo "✅ Basic secret scan completed"

  # Job 5: Build Status Summary
  build-summary:
    name: Build Summary
    runs-on: ubuntu-latest
    needs: [test-nextjs, test-firebase-functions, lint-extension, security-audit]
    if: always()
    
    steps:
    - name: Check build results
      run: |
        echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| Next.js Tests | ${{ needs.test-nextjs.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Firebase Functions | ${{ needs.test-firebase-functions.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Extension Lint | ${{ needs.lint-extension.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Security Audit | ${{ needs.security-audit.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ needs.test-nextjs.result }}" != "success" ] || \
           [ "${{ needs.test-firebase-functions.result }}" != "success" ] || \
           [ "${{ needs.lint-extension.result }}" != "success" ]; then
          echo "❌ Some checks failed" >> $GITHUB_STEP_SUMMARY
          exit 1
        else
          echo "✅ All checks passed!" >> $GITHUB_STEP_SUMMARY
        fi
