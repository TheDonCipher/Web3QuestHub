name: Deploy Preview

on:
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened ]

jobs:
  deploy-preview:
    name: Deploy Preview to Vercel
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: web3-quest-hub-app/package-lock.json
    
    - name: Install Vercel CLI
      run: npm install --global vercel@latest
    
    - name: Pull Vercel Environment Information
      run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      if: secrets.VERCEL_TOKEN != ''
      working-directory: ./web3-quest-hub-app
    
    - name: Build Project Artifacts
      run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      if: secrets.VERCEL_TOKEN != ''
      working-directory: ./web3-quest-hub-app
      env:
        NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
        NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
        NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
        NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
        NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
        NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
    
    - name: Deploy to Vercel
      id: deploy
      run: |
        url=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
        echo "url=$url" >> $GITHUB_OUTPUT
        echo "Preview deployed to: $url"
      if: secrets.VERCEL_TOKEN != ''
      working-directory: ./web3-quest-hub-app
    
    - name: Comment PR with preview URL
      uses: actions/github-script@v7
      if: secrets.VERCEL_TOKEN != '' && steps.deploy.outputs.url != ''
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const url = '${{ steps.deploy.outputs.url }}';
          const comment = `## ðŸš€ Preview Deployment
          
          Your preview deployment is ready!
          
          **Preview URL:** ${url}
          
          âœ… Type checking passed
          âœ… Linting passed
          âœ… Build successful
          
          <sub>Deployed with [Vercel](https://vercel.com)</sub>`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
